plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.jetbrains.kotlin.jvm'
}

group = 'com.example'
version = '1.0.0'

repositories {
	mavenCentral()
}

def generated = "src/main/generated"

dependencies {
	// Spring 기본
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

// Q클래스 생성 디렉토리 지정 (src/main/generated 유지)
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/generated']
		}
	}
}

// 생성된 Q클래스를 src/main/generated에 넣도록 설정
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file("src/main/generated")
}

tasks.named('test') {
	useJUnitPlatform()
}
kotlin {
	jvmToolchain(17)
}
